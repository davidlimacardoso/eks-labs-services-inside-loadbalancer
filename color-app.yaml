# Criar  deployment:
apiVersion: v1
kind: Namespace
metadata:
  name: labs-color-app-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: labs-green-app
  namespace: labs-color-app-api
  labels:
    app: labs-green-app
spec:
  selector:
    matchLabels:
      app: labs-green-app
  replicas: 2
  template:
    metadata:
      labels:
        app: labs-green-app
    spec:
      containers:
      - name: green-container
        image: 893777461466.dkr.ecr.us-east-1.amazonaws.com/repo-labs-green:latest
        ports:
            - containerPort: 80
        resources:
          limits:
            memory: "100Mi"
            cpu: "200m"
---
#Adicione os Services:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: labs-yellow-app
  namespace: labs-color-app-api
  labels:
    app: labs-yellow-app
spec:
  selector:
    matchLabels:
      app: labs-yellow-app
  replicas: 2
  template:
    metadata:
      labels:
        app: labs-yellow-app
    spec:
      containers:
      - name: yellow-container
        image: 893777461466.dkr.ecr.us-east-1.amazonaws.com/repo-labs-yellow:latest
        ports:
            - containerPort: 80
        resources:
          limits:
            memory: "100Mi"
            cpu: "200m"
---
# Defina o Ingress:
apiVersion: v1
kind: Service
metadata:
  namespace: labs-color-app-api
  name: green-service
  labels:
    app: labs-green-app
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /green/index.html
spec:
  type: NodePort
  selector:
    app: labs-green-app
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: labs-color-app-api
  name: yellow-service
  labels:
    app: labs-yellow-app
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /yellow/index.html
spec:
  type: NodePort
  selector:
    app: labs-yellow-app
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: labs-color-app-api-ingress
  namespace: labs-color-app-api
  labels:
    app: labs-color-app-api
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec:
  rules:
    - http:
        paths:
          - path: /yellow
            pathType: Prefix
            backend:
              service:
                name: yellow-service
                port:
                  number: 80                       
          - path: /green
            pathType: Prefix
            backend:
              service:
                name: green-service
                port:
                  number: 80
